name: Package It Depends for all platforms
on:
  create:
    tags:
      - 'v*'

jobs:
  package:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            generator: Ninja
            artifact_name: ItDepends_x64-Linux.tar.gz
            qt_arch: gcc_64

          - os: macos-latest
            generator: Ninja
            artifact_name: ItDepends_x64-MacOS.zip
            qt_arch: clang_64

          - os: windows-latest
            generator: Ninja
            artifact_name: ItDepends_x64-MacOS.zip
            qt_arch: win64_msvc2019_64

    runs-on: ${{matrix.os}}
    continue-on-error: true
    steps:
      - name: Create a new release
        uses: actions/create-release@v1
        id: create_release
        if: contains(matrix.os, 'windows')
        with:
          draft: false
          prerelease: false
          release_name: ${{ github.ref }}
          tag_name: ${{ github.ref }}
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Install Windows dependencies
        if: contains(matrix.os, 'windows')
        uses: msys2/setup-msys2@v2
        with:
          location: ${{env.msys}}
          msystem: mingw64
          install: mingw-w64-x86_64-ninja mingw-w64-x86_64-nlohmann-json

      - name: Install MacOS dependencies
        if: contains(matrix.os, 'macos')
        run: brew install ninja nlohmann-json

      - name: Install Linux dependencies
        if: contains(matrix.os, 'ubuntu')
        run: sudo apt install -y cmake ninja-build nlohmann-json3-dev

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
          - version: '6.6.0'
          - arch: '${{matrix.qt_arch}}'

      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Create It Depends project
        run: |
          cmake . -G "${{matrix.generator}}" -Dpackaging=true -Duse_installed_dependencies=true -Duse_qt6=true -DCMAKE_CXX_FLAGS='-w'

      - name: Build It Depends
        run: ninja ItDepends

      - name: Zip the Windows executable
        if: contains(matrix.os, 'windows')
        run: |
          7z a -tzip ${{matrix.artifact_name}} ./bin/ItDepends.exe

      - name: Zip the MacOS bundle
        if: contains(matrix.os, 'macos')
        run: |
          zip -rT ${{matrix.artifact_name}} ./bin/ItDepends.app >> /dev/null

      - name: Upload zip-file as build artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          upload_url: https://github.com/bartkessels/it-depends/releases/latest
          asset_path: ${{matrix.artifact_name}}
          asset_name: ${{matrix.artifact_name}}
          asset_content_type: application/zip
